"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[765],{77667:e=>{e.exports=JSON.parse('{"functions":[{"name":"Timeout","desc":"Disconnects the function after a given amount of time\\t","params":[{"name":"time","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"QueuePrompt\\r\\n"}],"function_type":"method","source":{"line":89,"path":"src/Queue/init.luau"}},{"name":"Destroy","desc":"Disconnects the function immediately","params":[],"returns":[],"function_type":"method","source":{"line":110,"path":"src/Queue/init.luau"}}],"properties":[],"types":[],"name":"QueuePrompt","desc":"This is what\'s returned from the Queue:Add() method. It can be used to add timeouts to the added function\\nor cancel it.\\n\\nBasic Usage:\\n```lua\\nlocal Queue = require(Path.to.Queue)\\n\\nlocal QueueClass = Queue.new()\\n\\nQueueClass:Add(task.wait, 5)\\n\\nlocal Prompt = QueueClass:Add(function()\\n\\tprint(\\"Ran\\")\\nend):Timeout(1)\\n\\n-- \\"Ran\\" never gets printed because while the first function yields for 5 seconds,\\n-- the second gets removed after 1 second\\n\\n-- it can also be manually disconnected with :Destroy()\\n\\ntask.wait(0.5)\\n\\nPrompt:Destroy()\\n```","since":"v1.2.0","source":{"line":77,"path":"src/Queue/init.luau"}}')}}]);