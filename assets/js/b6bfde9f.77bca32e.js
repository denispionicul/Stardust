"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[385],{77062:e=>{e.exports=JSON.parse('{"functions":[{"name":"Add","desc":"Adds a function to the queue.","params":[{"name":"func","desc":"","lua_type":"(T...) -> ...any"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"QueuePrompt\\r\\n"}],"function_type":"method","source":{"line":192,"path":"src/Queue/init.lua"}},{"name":"PromiseAdd","desc":"Adds a function to the queue, but instead of returning a QueuePrompt it returns a Promise.\\nThe promise resolves with whatever the function returned once the function has ran inside the queue.\\nIf the promise is canceled, it will remove itself from the queue.","params":[{"name":"func","desc":"","lua_type":"(T...) -> ...any"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"Promise\\r\\n"}],"function_type":"method","source":{"line":227,"path":"src/Queue/init.lua"}},{"name":"Stop","desc":"Clears all current functions in the queue and empties it.\\nThe emptied event won\'t fire in here.","params":[],"returns":[],"function_type":"method","source":{"line":256,"path":"src/Queue/init.lua"}},{"name":"new","desc":"Returns a new queue.","params":[],"returns":[{"desc":"","lua_type":"Queue\\r\\n"}],"function_type":"static","source":{"line":269,"path":"src/Queue/init.lua"}},{"name":"Destroy","desc":"Destroys the queue.","params":[],"returns":[],"function_type":"method","source":{"line":288,"path":"src/Queue/init.lua"}}],"properties":[{"name":"Emptied","desc":"Fires whenever the queue runs out of functions.\\n\\n```lua\\nQueueClass.Emptied:Connect(function()\\n\\tprint(\\"Queue emptied!\\")\\nend)\\n```","lua_type":"RBXScriptSignal","source":{"line":155,"path":"src/Queue/init.lua"}},{"name":"Returned","desc":"Fires whenever a function in the queue returns a value.\\n\\n```lua\\nQueueClass.Returned:Connect(function(...)\\n\\tprint(\\"Queue returned a value\\" )\\n\\tprint(...)\\nend)\\n```","lua_type":"RBXScriptSignal","since":"v1.1.0","source":{"line":170,"path":"src/Queue/init.lua"}},{"name":"Switched","desc":"Fires whenever the queue moves onto the next function.\\n\\n```lua\\nQueueClass.Switched:Connect(function()\\n\\tprint(\\"Queue moved onto the next function.\\")\\nend)\\n```","lua_type":"RBXScriptSignal","since":"v1.3.0","source":{"line":184,"path":"src/Queue/init.lua"}}],"types":[],"name":"Queue","desc":"Queues are a collection of functions that run in order.\\n\\nBasic Usage:\\n```lua\\nlocal Queue = require(Path.to.Queue)\\n\\nlocal QueueClass = Queue.new()\\n\\nQueueClass:Add(function()\\n\\ttask.wait(5)\\n\\tprint(\\"function 1 finished!\\")\\nend)\\n\\nQueueClass:Add(function()\\n\\ttask.wait(10)\\n\\tprint(\\"function 2 finished!\\")\\nend)\\n\\n-- function 1 will run, then the 2nd one\\n```","source":{"line":142,"path":"src/Queue/init.lua"}}')}}]);